controller控制器：
1、实际存在的，而pod只是一个抽象概念
2、集群中管理和运行容器的对象
3、pod是通过controller实现应用的运维，例如伸缩scale，滚动升级等
4、controller和pod之间通过label产生关系。controller通过Selector选择器对相应label标签的pod进行管理

Deployment控制器：
1、部署无状态运用
2、管理pod和ReplicaSet
3、部署、滚动升级等
4、应用场景：web服务、微服务等

部署deployment：
kubectl create deployment web --image=nginx -o yaml --dry-run > myl.yaml #导出模板yaml进行修改
部署应用：
kubectl apply -f myl.yaml
对外暴露端口和应用名称,也是导出yaml文件修改后部署：
kubectl expose deployment nginx --port=80 --target-pot 10080 --type=NodePort  -o yaml --dry-run > port.yaml 
获取服务端口：
kubectl get pod,svc

升级应用：
kubectl set image deployment webname  nginx=nginx:1.15  #将webname服务的nginx版本升级到1.15
查看升级情况：
kubectl rollout status deployment webname

kubectl rollout history deployment webname  #查看历史版本

kubectl rollout undo deployment webname  #回滚到上一个版本

kubectl rollout undo deployment webname --to-revision=2  #回滚到特定版本

kubectl scale deployment webname  --replicas=10  #弹性伸缩，将副本设定到10